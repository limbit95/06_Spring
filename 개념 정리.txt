1. List<String> strList1 = null;
List<String> strList2 = new ArrayList<String>();
strList1.isEmpty() 와 strList2.isEmpty()은 엄연히 다르다. 
strList1은 참조형 변수명만 선언하고 그 공간 안에 객체를 할당하지 않았기 때문에 isEmpty() 메서드가 올바르게 작동하지 않는다 그래서 if(strList1.isEmpty){} 이런식으로 조건문을 달게 되면 애시당초 strList1의 할당값은 null이 때문에 객체배열만 사용할 수 있는 isEmpty를 사용할 수 없으므로 해당 조건문에 들어올 수 없게 되는 것이다.
반대로 strList2는 배열 안의 값은 비어있지만 할당값은 null이 아니기 때문에 반대로 if(strList2 == null){} 라는 조건식을 달 경우 해당 조건문 안으로 들어가지 못하며 if(strList2.isEmpty()){} 조건식을 달아야 해당 조건문 안으로 들어올 수 있다

2. JS (innerText와 value의 차이)
- input 과 같이 값을 입력할 수 있는 태그에서는 value를 통해 값을 가져올 수 있고
- innerText는 html의 div, span, h1과 같은 태그 사이에 작성된 텍스트를 뜻함

3. dataset
- value 값을 지정할 수 없는 div, span, h와 같은 태그에 값을 지정하기 위해 사용하는 속성
- 태그에 직접 data-test="test" 이런식으로 삽입하여 사용가능하지만 js 내에서 우회하여 속성 추가도 가능
- js에서 html의 태그 요소를 얻어와 const 변수명 에 지정한 후 해당 변수명.setAttribute("data-test", "값"); 로도 속성 삽입 가능하다
- 참고로 data- 이후의 지정명이 속성값 이름으로 지정되는 것이며 data- 이후에 나오는 - 하이픈은 js에서 인식할 수 없기때문에 - 뒤에 붙은 문자는 대문자 즉 카멜표기법과 같이 변형이 된다
- ex) data-user-name == userName
- thymeleaf를 통해 값 지정 가능 : <button th:data-member-no="${Member.memberNo}"></button>

4. 평문, 암호화

5. 쿠키 : 클라이언트(브라우저)에 저장되는 작은 데이터 조각 (보안에 취약, 만료기간 지정 가능)
(쿠키와 세션의 차이는?)

6. 세션 : 서버 측에서 사용자 상태 관리 (서버 측에서 데이터 관리하기 때문에 쿠키보다 보안 안전함)
클라이언트가 서버로 요청 보냈을 때 서버 측에서 고유한 세션ID를 만듬(이 세션ID를 클라이언트 측에 보내주기도 함)

7. JSON 변환 
- JSON.parse(JSON 데이터) : String 형태의 JSON 데이터를 JS Object 타입으로 변환
- JSON.stringify(JS Object) : JS Object 타입을 String 형태의 JSON 데이터로 변환
